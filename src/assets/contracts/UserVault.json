{
  "contractName": "UserVault",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_version",
          "type": "uint256"
        }
      ],
      "name": "setVersion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "migratedUsers",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from_",
          "type": "address"
        },
        {
          "name": "value_",
          "type": "uint256"
        },
        {
          "name": "data_",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newContract",
          "type": "address"
        }
      ],
      "name": "migrateUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "VaultAdd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "UserMigrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isUserVault",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_previousUserVault",
          "type": "address"
        },
        {
          "name": "_version",
          "type": "uint256"
        }
      ],
      "name": "setUserVaultVersion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_experimentalToken",
          "type": "address"
        }
      ],
      "name": "setExperimentalToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_userVillage",
          "type": "address"
        }
      ],
      "name": "setUserVillage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "add",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060003414151561006057600080fd5b6115c78061006f6000396000f3006080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630bc029481461010057806317ffc3201461014d57806327e235e3146101905780632aed7f3f146101e7578063408def1e1461022a57806354fd4d501461025757806370a082311461028257806385d65332146102d95780638da5cb5b1461031c5780639f727c2714610373578063b1dc576f1461038a578063bbe768a4146103cd578063c0d7e07b14610428578063c0ee0b8a14610457578063dd6c7e31146104bc578063f2fde38b146104ff578063f5d82b6b14610542575b3480156100fd57600080fd5b50005b34801561010c57600080fd5b5061014b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a7565b005b34801561015957600080fd5b5061018e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107a6565b005b34801561019c57600080fd5b506101d1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610988565b6040518082815260200191505060405180910390f35b3480156101f357600080fd5b50610228600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109a0565b005b34801561023657600080fd5b5061025560048036038101908080359060200190929190505050610ad8565b005b34801561026357600080fd5b5061026c610b3d565b6040518082815260200191505060405180910390f35b34801561028e57600080fd5b506102c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b43565b6040518082815260200191505060405180910390f35b3480156102e557600080fd5b5061031a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b8c565b005b34801561032857600080fd5b50610331610c2b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561037f57600080fd5b50610388610c50565b005b34801561039657600080fd5b506103cb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d22565b005b3480156103d957600080fd5b5061040e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e6b565b604051808215151515815260200191505060405180910390f35b34801561043457600080fd5b5061043d610e8b565b604051808215151515815260200191505060405180910390f35b34801561046357600080fd5b506104ba600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001919091929391929390505050610e94565b005b3480156104c857600080fd5b506104fd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e99565b005b34801561050b57600080fd5b50610540600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061105c565b005b34801561054e57600080fd5b5061058d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111b1565b604051808215151515815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561060257600080fd5b8173ffffffffffffffffffffffffffffffffffffffff1663c0d7e07b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561066657600080fd5b505af115801561067a573d6000803e3d6000fd5b505050506040513d602081101561069057600080fd5b810190808051906020019092919050505015156106ac57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b505050506040513d602081101561073a57600080fd5b81019080805190602001909291905050508111151561075857600080fd5b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107a281610ad8565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561080357600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561086057600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156108fb57600080fd5b505af115801561090f573d6000803e3d6000fd5b505050506040513d602081101561092557600080fd5b810190808051906020019092919050505090506109846000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166114929092919063ffffffff16565b5050565b60036020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109fd57600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610abc57600080fd5b505af1158015610ad0573d6000803e3d6000fd5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b3357600080fd5b8060018190555050565b60015481565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610be757600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cab57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501515610d2057fe5b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d7d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c19d6f5f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b505050506040513d6020811015610e0b57600080fd5b81019080805190602001909291905050501515610e2757600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026020528060005260406000206000915054906101000a900460ff1681565b60006001905090565b600080fd5b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151515610ef957600080fd5b6001548173ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f6057600080fd5b505af1158015610f74573d6000803e3d6000fd5b505050506040513d6020811015610f8a57600080fd5b8101908080519060200190929190505050111515610fa757600080fd5b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc123aa2e5c63456c59a4694ac50ba610152278a01162f3d5e3a6ffc457bc586e60405160405180910390a350565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110b757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156110f357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061125b57506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561126657600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561135f57600080fd5b505af1158015611373573d6000803e3d6000fd5b505050506040513d602081101561138957600080fd5b810190808051906020019092919050505015156113a557600080fd5b6113f782600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461157d90919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f31bad5e33d78c53a4fff2a1a5a76a3298afae45e741f0961945f77f20a578995836040518082815260200191505060405180910390a26001905092915050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561153557600080fd5b505af1158015611549573d6000803e3d6000fd5b505050506040513d602081101561155f57600080fd5b8101908080519060200190929190505050151561157857fe5b505050565b600080828401905083811015151561159157fe5b80915050929150505600a165627a7a723058204ab08f8fa44d1f0e05f35ce96ac67c79b509399554892165aac1a9c9156dee2b0029",
  "deployedBytecode": "0x6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630bc029481461010057806317ffc3201461014d57806327e235e3146101905780632aed7f3f146101e7578063408def1e1461022a57806354fd4d501461025757806370a082311461028257806385d65332146102d95780638da5cb5b1461031c5780639f727c2714610373578063b1dc576f1461038a578063bbe768a4146103cd578063c0d7e07b14610428578063c0ee0b8a14610457578063dd6c7e31146104bc578063f2fde38b146104ff578063f5d82b6b14610542575b3480156100fd57600080fd5b50005b34801561010c57600080fd5b5061014b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a7565b005b34801561015957600080fd5b5061018e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107a6565b005b34801561019c57600080fd5b506101d1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610988565b6040518082815260200191505060405180910390f35b3480156101f357600080fd5b50610228600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109a0565b005b34801561023657600080fd5b5061025560048036038101908080359060200190929190505050610ad8565b005b34801561026357600080fd5b5061026c610b3d565b6040518082815260200191505060405180910390f35b34801561028e57600080fd5b506102c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b43565b6040518082815260200191505060405180910390f35b3480156102e557600080fd5b5061031a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b8c565b005b34801561032857600080fd5b50610331610c2b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561037f57600080fd5b50610388610c50565b005b34801561039657600080fd5b506103cb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d22565b005b3480156103d957600080fd5b5061040e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e6b565b604051808215151515815260200191505060405180910390f35b34801561043457600080fd5b5061043d610e8b565b604051808215151515815260200191505060405180910390f35b34801561046357600080fd5b506104ba600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001919091929391929390505050610e94565b005b3480156104c857600080fd5b506104fd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e99565b005b34801561050b57600080fd5b50610540600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061105c565b005b34801561054e57600080fd5b5061058d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111b1565b604051808215151515815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561060257600080fd5b8173ffffffffffffffffffffffffffffffffffffffff1663c0d7e07b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561066657600080fd5b505af115801561067a573d6000803e3d6000fd5b505050506040513d602081101561069057600080fd5b810190808051906020019092919050505015156106ac57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b505050506040513d602081101561073a57600080fd5b81019080805190602001909291905050508111151561075857600080fd5b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107a281610ad8565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561080357600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561086057600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156108fb57600080fd5b505af115801561090f573d6000803e3d6000fd5b505050506040513d602081101561092557600080fd5b810190808051906020019092919050505090506109846000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166114929092919063ffffffff16565b5050565b60036020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109fd57600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610abc57600080fd5b505af1158015610ad0573d6000803e3d6000fd5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b3357600080fd5b8060018190555050565b60015481565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610be757600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cab57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501515610d2057fe5b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d7d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c19d6f5f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b505050506040513d6020811015610e0b57600080fd5b81019080805190602001909291905050501515610e2757600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026020528060005260406000206000915054906101000a900460ff1681565b60006001905090565b600080fd5b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151515610ef957600080fd5b6001548173ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f6057600080fd5b505af1158015610f74573d6000803e3d6000fd5b505050506040513d6020811015610f8a57600080fd5b8101908080519060200190929190505050111515610fa757600080fd5b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc123aa2e5c63456c59a4694ac50ba610152278a01162f3d5e3a6ffc457bc586e60405160405180910390a350565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110b757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156110f357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061125b57506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561126657600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561135f57600080fd5b505af1158015611373573d6000803e3d6000fd5b505050506040513d602081101561138957600080fd5b810190808051906020019092919050505015156113a557600080fd5b6113f782600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461157d90919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f31bad5e33d78c53a4fff2a1a5a76a3298afae45e741f0961945f77f20a578995836040518082815260200191505060405180910390a26001905092915050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561153557600080fd5b505af1158015611549573d6000803e3d6000fd5b505050506040513d602081101561155f57600080fd5b8101908080519060200190929190505050151561157857fe5b505050565b600080828401905083811015151561159157fe5b80915050929150505600a165627a7a723058204ab08f8fa44d1f0e05f35ce96ac67c79b509399554892165aac1a9c9156dee2b0029",
  "sourceMap": "571:3419:9:-;;;1142:25;8:9:-1;5:2;;;30:1;27;20:12;5:2;1142:25:9;509:10:20;501:5;;:18;;;;;;;;;;;;;;;;;;982:1:17;969:9;:14;961:23;;;;;;;;571:3419:9;;;;;;",
  "deployedSourceMap": "571:3419:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;571:3419:9;;1695:262;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1695:262:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3482:194;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3482:194:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;929:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;929:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;480:164:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;480:164:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;667:81:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;667:81:11;;;;;;;;;;;;;;;;;;;;;;;;;;239:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;239:19:11;;;;;;;;;;;;;;;;;;;;;;;3877:111:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3877:111:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2189:136:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:20;;;;;;;;;;;;;;;;;;;;;;;;;;;1201:86:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1201:86:17;;;;;;2533:149:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2533:149:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;262:45:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;262:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1283:71:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1283:71:9;;;;;;;;;;;;;;;;;;;;;;;;;;;634:129:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;634:129:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;967:203:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;967:203:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:169:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;834:169:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;2911:317:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2911:317:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:262;654:5:20;;;;;;;;;;;640:19;;:10;:19;;;632:28;;;;;;;;1800:18:9;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1800:32:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1800:32:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1800:32:9;;;;;;;;;;;;;;;;1792:41;;;;;;;;1856:18;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1856:28:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1856:28:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1856:28:9;;;;;;;;;;;;;;;;1845:8;:39;1837:48;;;;;;;;1909:18;1889:17;;:38;;;;;;;;;;;;;;;;;;1933:20;1944:8;1933:10;:20::i;:::-;1695:262;;:::o;3482:194::-;3590:15;654:5:20;;;;;;;;;;;640:19;;:10;:19;;;632:28;;;;;;;;3566:17:9;;;;;;;;;;;3556:27;;:6;:27;;;;3548:36;;;;;;;;3608:6;:16;;;3625:4;3608:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3608:22:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3608:22:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3608:22:9;;;;;;;;;;;;;;;;3590:40;;3636:35;3656:5;;;;;;;;;;;3663:7;3636:6;:19;;;;:35;;;;;:::i;:::-;3482:194;;:::o;929:43::-;;;;;;;;;;;;;;;;;:::o;480:164:16:-;552:20;654:5:20;;;;;;;;;;;640:19;;:10;:19;;;632:28;;;;;;;;583:12:16;552:44;;602:12;:30;;;633:5;;;;;;;;;;;602:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;602:37:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;602:37:16;;;;480:164;;:::o;667:81:11:-;654:5:20;;;;;;;;;;;640:19;;:10;:19;;;632:28;;;;;;;;735:8:11;725:7;:18;;;;667:81;:::o;239:19::-;;;;:::o;3877:111:9:-;3938:15;3968:8;:15;3977:5;3968:15;;;;;;;;;;;;;;;;3961:22;;3877:111;;;:::o;2189:136::-;654:5:20;;;;;;;;;;;640:19;;:10;:19;;;632:28;;;;;;;;2302:18:9;2282:17;;:38;;;;;;;;;;;;;;;;;;2189:136;:::o;238:20:20:-;;;;;;;;;;;;;:::o;1201:86:17:-;654:5:20;;;;;;;;;;;640:19;;:10;:19;;;632:28;;;;;;;;1257:5:17;;;;;;;;;;;:10;;:24;1268:4;:12;;;1257:24;;;;;;;;;;;;;;;;;;;;;;;1250:32;;;;;;1201:86::o;2533:149:9:-;654:5:20;;;;;;;;;;;640:19;;:10;:19;;;632:28;;;;;;;;2616:12:9;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2616:28:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2616:28:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2616:28:9;;;;;;;;;;;;;;;;2608:37;;;;;;;;2665:12;2651:11;;:26;;;;;;;;;;;;;;;;;;2533:149;:::o;262:45:11:-;;;;;;;;;;;;;;;;;;;;;;:::o;1283:71:9:-;1329:4;1346;1339:11;;1283:71;:::o;634:129:18:-;750:8;;;967:203:11;596:4;567:33;;:13;:25;581:10;567:25;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;;559:42;;;;;;;;1070:7;;1045:12;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1045:22:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1045:22:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1045:22:11;;;;;;;;;;;;;;;;:32;1037:41;;;;;;;;1112:4;1084:13;:25;1098:10;1084:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1152:12;1127:38;;1140:10;1127:38;;;;;;;;;;;;967:203;:::o;834:169:20:-;654:5;;;;;;;;;;;640:19;;:10;:19;;;632:28;;;;;;;;930:1;910:22;;:8;:22;;;;902:31;;;;;;;;967:8;939:37;;960:5;;;;;;;;;;;939:37;;;;;;;;;;;;990:8;982:5;;:16;;;;;;;;;;;;;;;;;;834:169;:::o;2911:317:9:-;2973:4;3015:11;;;;;;;;;;;2993:34;;:10;:34;;;:57;;;;3045:5;;;;;;;;;;;3031:19;;:10;:19;;;2993:57;2985:66;;;;;;;;3065:17;;;;;;;;;;;:30;;;3096:5;3103:4;3109:7;3065:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3065:52:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3065:52:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3065:52:9;;;;;;;;;;;;;;;;3057:61;;;;;;;;3143:28;3163:7;3143:8;:15;3152:5;3143:15;;;;;;;;;;;;;;;;:19;;:28;;;;:::i;:::-;3125:8;:15;3134:5;3125:15;;;;;;;;;;;;;;;:46;;;;3190:5;3181:24;;;3197:7;3181:24;;;;;;;;;;;;;;;;;;3219:4;3212:11;;2911:317;;;;:::o;367:120:24:-;456:5;:14;;;471:2;475:5;456:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;456:25:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;456:25:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;456:25:24;;;;;;;;;;;;;;;;449:33;;;;;;367:120;;;:::o;698:129:14:-;756:7;771:9;787:1;783;:5;771:17;;806:1;801;:6;;794:14;;;;;;821:1;814:8;;698:129;;;;;:::o",
  "source": "pragma solidity ^0.4.23;\n\nimport 'e11-contracts/contracts/ExperimentalToken.sol';\nimport 'zeppelin-solidity/contracts/math/SafeMath.sol';\nimport 'zeppelin-solidity/contracts/ownership/NoOwner.sol';\nimport './UserVillage.sol';\nimport './Versioned.sol';\n\n /**\n  * @title UserVault (WIP)\n  * @dev Keeps track of users e11 balance inside the game.\n  * Additional functionality might be added to allow withdraws, implement time locks on withdraws,\n  * and enable internal transfers between users.\n  * @dev Issue: * https://github.com/e11-io/crypto-wars-solidity/issues/2\n  */\ncontract UserVault is NoOwner, Versioned {\n  using SafeMath for uint256;\n\n  /**\n   * @dev event for adding tokens logging\n   * @param owner The address that will receive the tokens.\n   * @param amount The amount of tokens to add.\n   */\n\tevent VaultAdd(address indexed owner, uint256 amount);\n\n  // Mapping of user -> balance (keeps track of owned balance)\n  mapping(address => uint256) public balances;\n\n\tExperimentalToken experimentalToken;\n  UserVault previousUserVault;\n  UserVillage userVillage;\n\n\n  /**\n   * @dev Constructor: Instantiate User Vault contract.\n   */\n\tconstructor() public {\n\t}\n\n\t/**\n\t * @notice Makes the contract type verifiable.\n\t * @dev Function to prove the contract is User Vault.\n\t */\n\tfunction isUserVault() external pure returns (bool) {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @notice Sets the contract's version and instantiates the previous version contract.\n\t * @dev Function to set the contract version and instantiate the previous User Buildings.\n\t * @param _previousUserVault the address of previous User Vault contract. (address)\n\t * @param _version the current contract version number. (uint)\n\t */\n\tfunction setUserVaultVersion(UserVault _previousUserVault, uint _version) external onlyOwner {\n\t\trequire(_previousUserVault.isUserVault());\n\t\trequire(_version > _previousUserVault.version());\n\t\tpreviousUserVault = _previousUserVault;\n    setVersion(_version);\n\t}\n\n  /**\n   * @notice Instantiate Experimental Token contract.\n   * @dev Function to provide Experimental Token address and instantiate it.\n   * @param _experimentalToken the address of Experimental Token contract. (address)\n   */\n  function setExperimentalToken(ExperimentalToken _experimentalToken) external onlyOwner {\n    experimentalToken = _experimentalToken;\n  }\n\n  /**\n   * @notice Instantiate User Village contract.\n   * @dev Function to provide User Village address and instantiate it.\n   * @param _userVillage the address of User Village contract. (address)\n   */\n  function setUserVillage(UserVillage _userVillage) external onlyOwner {\n    require(_userVillage.isUserVillage());\n    userVillage = _userVillage;\n  }\n\n  /**\n   * @dev Function to add tokens\n   * @param _from The address that will receive the tokens.\n   * @param _amount The amount of tokens to add.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function add(address _from, uint256 _amount) external returns(bool) {\n    require(msg.sender == address(userVillage) || msg.sender == owner);\n    require(experimentalToken.transferFrom(_from, this, _amount));\n\n    balances[_from] = balances[_from].add(_amount);\n\n\t\temit VaultAdd(_from, _amount);\n\n    return true;\n  }\n\n  /**\n   * @dev Function to overwrite reclaimToken\n   * Do not allow owner to reclaim contract specific tokens.\n   * @param _token The token address that will be reclaimed.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function reclaimToken(ERC20Basic _token) external onlyOwner {\n    require(_token != experimentalToken);\n    uint256 balance = _token.balanceOf(this);\n    _token.safeTransfer(owner, balance);\n  }\n\n  /**\n   * @dev Gets the balance of the specified address.\n   * @param _user The address to query the balance of.\n   * @return An uint256 representing the amount owned by the passed address.\n   */\n  function balanceOf(address _user) external constant returns (uint256 balance) {\n    return balances[_user];\n  }\n}\n",
  "sourcePath": "/home/francisco/Truffle/crypto-wars-solidity/contracts/UserVault.sol",
  "ast": {
    "absolutePath": "/home/francisco/Truffle/crypto-wars-solidity/contracts/UserVault.sol",
    "exportedSymbols": {
      "UserVault": [
        8533
      ]
    },
    "id": 8534,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8339,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "e11-contracts/contracts/ExperimentalToken.sol",
        "file": "e11-contracts/contracts/ExperimentalToken.sol",
        "id": 8340,
        "nodeType": "ImportDirective",
        "scope": 8534,
        "sourceUnit": 8954,
        "src": "26:55:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "zeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 8341,
        "nodeType": "ImportDirective",
        "scope": 8534,
        "sourceUnit": 9092,
        "src": "82:55:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/NoOwner.sol",
        "file": "zeppelin-solidity/contracts/ownership/NoOwner.sol",
        "id": 8342,
        "nodeType": "ImportDirective",
        "scope": 8534,
        "sourceUnit": 9223,
        "src": "138:59:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/francisco/Truffle/crypto-wars-solidity/contracts/UserVillage.sol",
        "file": "./UserVillage.sol",
        "id": 8343,
        "nodeType": "ImportDirective",
        "scope": 8534,
        "sourceUnit": 8843,
        "src": "198:27:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/francisco/Truffle/crypto-wars-solidity/contracts/Versioned.sol",
        "file": "./Versioned.sol",
        "id": 8344,
        "nodeType": "ImportDirective",
        "scope": 8534,
        "sourceUnit": 8915,
        "src": "226:25:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8345,
              "name": "NoOwner",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9222,
              "src": "593:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NoOwner_$9222",
                "typeString": "contract NoOwner"
              }
            },
            "id": 8346,
            "nodeType": "InheritanceSpecifier",
            "src": "593:7:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8347,
              "name": "Versioned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8914,
              "src": "602:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Versioned_$8914",
                "typeString": "contract Versioned"
              }
            },
            "id": 8348,
            "nodeType": "InheritanceSpecifier",
            "src": "602:9:9"
          }
        ],
        "contractDependencies": [
          8914,
          9124,
          9150,
          9185,
          9210,
          9222,
          9278
        ],
        "contractKind": "contract",
        "documentation": "@title UserVault (WIP)\n@dev Keeps track of users e11 balance inside the game.\nAdditional functionality might be added to allow withdraws, implement time locks on withdraws,\nand enable internal transfers between users.\n@dev Issue: * https://github.com/e11-io/crypto-wars-solidity/issues/2",
        "fullyImplemented": true,
        "id": 8533,
        "linearizedBaseContracts": [
          8533,
          8914,
          9222,
          9150,
          9210,
          9124,
          9185,
          9278
        ],
        "name": "UserVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8351,
            "libraryName": {
              "contractScope": null,
              "id": 8349,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9091,
              "src": "622:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$9091",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "616:27:9",
            "typeName": {
              "id": 8350,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "635:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": "@dev event for adding tokens logging\n@param owner The address that will receive the tokens.\n@param amount The amount of tokens to add.",
            "id": 8357,
            "name": "VaultAdd",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8353,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 8357,
                  "src": "823:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8355,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8357,
                  "src": "846:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "822:39:9"
            },
            "src": "808:54:9"
          },
          {
            "constant": false,
            "id": 8361,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 8533,
            "src": "929:43:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 8360,
              "keyType": {
                "id": 8358,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "937:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "929:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8359,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "948:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8363,
            "name": "experimentalToken",
            "nodeType": "VariableDeclaration",
            "scope": 8533,
            "src": "976:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
              "typeString": "contract ExperimentalToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 8362,
              "name": "ExperimentalToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8953,
              "src": "976:17:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                "typeString": "contract ExperimentalToken"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8365,
            "name": "previousUserVault",
            "nodeType": "VariableDeclaration",
            "scope": 8533,
            "src": "1015:27:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UserVault_$8533",
              "typeString": "contract UserVault"
            },
            "typeName": {
              "contractScope": null,
              "id": 8364,
              "name": "UserVault",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8533,
              "src": "1015:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserVault_$8533",
                "typeString": "contract UserVault"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8367,
            "name": "userVillage",
            "nodeType": "VariableDeclaration",
            "scope": 8533,
            "src": "1046:23:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UserVillage_$8842",
              "typeString": "contract UserVillage"
            },
            "typeName": {
              "contractScope": null,
              "id": 8366,
              "name": "UserVillage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8842,
              "src": "1046:11:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserVillage_$8842",
                "typeString": "contract UserVillage"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8370,
              "nodeType": "Block",
              "src": "1163:4:9",
              "statements": []
            },
            "documentation": "@dev Constructor: Instantiate User Vault contract.",
            "id": 8371,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1153:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1163:0:9"
            },
            "scope": 8533,
            "src": "1142:25:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8378,
              "nodeType": "Block",
              "src": "1335:19:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 8376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1346:4:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8375,
                  "id": 8377,
                  "nodeType": "Return",
                  "src": "1339:11:9"
                }
              ]
            },
            "documentation": "@notice Makes the contract type verifiable.\n@dev Function to prove the contract is User Vault.",
            "id": 8379,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isUserVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8374,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8379,
                  "src": "1329:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8373,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1328:6:9"
            },
            "scope": 8533,
            "src": "1283:71:9",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8410,
              "nodeType": "Block",
              "src": "1788:169:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 8389,
                            "name": "_previousUserVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8381,
                            "src": "1800:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserVault_$8533",
                              "typeString": "contract UserVault"
                            }
                          },
                          "id": 8390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUserVault",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8379,
                          "src": "1800:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$__$returns$_t_bool_$",
                            "typeString": "function () pure external returns (bool)"
                          }
                        },
                        "id": 8391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1800:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8388,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9762,
                        9763
                      ],
                      "referencedDeclaration": 9762,
                      "src": "1792:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8393,
                  "nodeType": "ExpressionStatement",
                  "src": "1792:41:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8395,
                          "name": "_version",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8383,
                          "src": "1845:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 8396,
                              "name": "_previousUserVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8381,
                              "src": "1856:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UserVault_$8533",
                                "typeString": "contract UserVault"
                              }
                            },
                            "id": 8397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "version",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8849,
                            "src": "1856:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 8398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1856:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1845:39:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9762,
                        9763
                      ],
                      "referencedDeclaration": 9762,
                      "src": "1837:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1837:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8401,
                  "nodeType": "ExpressionStatement",
                  "src": "1837:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8402,
                      "name": "previousUserVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8365,
                      "src": "1889:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserVault_$8533",
                        "typeString": "contract UserVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8403,
                      "name": "_previousUserVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8381,
                      "src": "1909:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserVault_$8533",
                        "typeString": "contract UserVault"
                      }
                    },
                    "src": "1889:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserVault_$8533",
                      "typeString": "contract UserVault"
                    }
                  },
                  "id": 8405,
                  "nodeType": "ExpressionStatement",
                  "src": "1889:38:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8407,
                        "name": "_version",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8383,
                        "src": "1944:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8406,
                      "name": "setVersion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8884,
                      "src": "1933:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 8408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1933:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8409,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:20:9"
                }
              ]
            },
            "documentation": "@notice Sets the contract's version and instantiates the previous version contract.\n@dev Function to set the contract version and instantiate the previous User Buildings.\n@param _previousUserVault the address of previous User Vault contract. (address)\n@param _version the current contract version number. (uint)",
            "id": 8411,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 8386,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8385,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "1778:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1778:9:9"
              }
            ],
            "name": "setUserVaultVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8381,
                  "name": "_previousUserVault",
                  "nodeType": "VariableDeclaration",
                  "scope": 8411,
                  "src": "1724:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UserVault_$8533",
                    "typeString": "contract UserVault"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8380,
                    "name": "UserVault",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8533,
                    "src": "1724:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserVault_$8533",
                      "typeString": "contract UserVault"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8383,
                  "name": "_version",
                  "nodeType": "VariableDeclaration",
                  "scope": 8411,
                  "src": "1754:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8382,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1723:45:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1788:0:9"
            },
            "scope": 8533,
            "src": "1695:262:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8422,
              "nodeType": "Block",
              "src": "2276:49:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8418,
                      "name": "experimentalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8363,
                      "src": "2282:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                        "typeString": "contract ExperimentalToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8419,
                      "name": "_experimentalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8413,
                      "src": "2302:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                        "typeString": "contract ExperimentalToken"
                      }
                    },
                    "src": "2282:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                      "typeString": "contract ExperimentalToken"
                    }
                  },
                  "id": 8421,
                  "nodeType": "ExpressionStatement",
                  "src": "2282:38:9"
                }
              ]
            },
            "documentation": "@notice Instantiate Experimental Token contract.\n@dev Function to provide Experimental Token address and instantiate it.\n@param _experimentalToken the address of Experimental Token contract. (address)",
            "id": 8423,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 8416,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8415,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "2266:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2266:9:9"
              }
            ],
            "name": "setExperimentalToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8413,
                  "name": "_experimentalToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 8423,
                  "src": "2219:36:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                    "typeString": "contract ExperimentalToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8412,
                    "name": "ExperimentalToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8953,
                    "src": "2219:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                      "typeString": "contract ExperimentalToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2218:38:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2276:0:9"
            },
            "scope": 8533,
            "src": "2189:136:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8440,
              "nodeType": "Block",
              "src": "2602:80:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 8431,
                            "name": "_userVillage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8425,
                            "src": "2616:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserVillage_$8842",
                              "typeString": "contract UserVillage"
                            }
                          },
                          "id": 8432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUserVillage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8587,
                          "src": "2616:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$__$returns$_t_bool_$",
                            "typeString": "function () pure external returns (bool)"
                          }
                        },
                        "id": 8433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2616:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9762,
                        9763
                      ],
                      "referencedDeclaration": 9762,
                      "src": "2608:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2608:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8435,
                  "nodeType": "ExpressionStatement",
                  "src": "2608:37:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8436,
                      "name": "userVillage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8367,
                      "src": "2651:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserVillage_$8842",
                        "typeString": "contract UserVillage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8437,
                      "name": "_userVillage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8425,
                      "src": "2665:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserVillage_$8842",
                        "typeString": "contract UserVillage"
                      }
                    },
                    "src": "2651:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserVillage_$8842",
                      "typeString": "contract UserVillage"
                    }
                  },
                  "id": 8439,
                  "nodeType": "ExpressionStatement",
                  "src": "2651:26:9"
                }
              ]
            },
            "documentation": "@notice Instantiate User Village contract.\n@dev Function to provide User Village address and instantiate it.\n@param _userVillage the address of User Village contract. (address)",
            "id": 8441,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 8428,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8427,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "2592:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2592:9:9"
              }
            ],
            "name": "setUserVillage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8425,
                  "name": "_userVillage",
                  "nodeType": "VariableDeclaration",
                  "scope": 8441,
                  "src": "2557:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UserVillage_$8842",
                    "typeString": "contract UserVillage"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8424,
                    "name": "UserVillage",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8842,
                    "src": "2557:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserVillage_$8842",
                      "typeString": "contract UserVillage"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2556:26:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2602:0:9"
            },
            "scope": 8533,
            "src": "2533:149:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8491,
              "nodeType": "Block",
              "src": "2979:249:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8451,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9759,
                              "src": "2993:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2993:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8454,
                                "name": "userVillage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8367,
                                "src": "3015:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UserVillage_$8842",
                                  "typeString": "contract UserVillage"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UserVillage_$8842",
                                  "typeString": "contract UserVillage"
                                }
                              ],
                              "id": 8453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3007:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 8455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3007:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2993:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8457,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9759,
                              "src": "3031:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3031:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 8459,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9226,
                            "src": "3045:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3031:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2993:57:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9762,
                        9763
                      ],
                      "referencedDeclaration": 9762,
                      "src": "2985:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2985:66:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8463,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:66:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8467,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8443,
                            "src": "3096:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 8468,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9802,
                            "src": "3103:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserVault_$8533",
                              "typeString": "contract UserVault"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 8469,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8445,
                            "src": "3109:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_UserVault_$8533",
                              "typeString": "contract UserVault"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 8465,
                            "name": "experimentalToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8363,
                            "src": "3065:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                              "typeString": "contract ExperimentalToken"
                            }
                          },
                          "id": 8466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9598,
                          "src": "3065:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 8470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3065:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9762,
                        9763
                      ],
                      "referencedDeclaration": 9762,
                      "src": "3057:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3057:61:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8472,
                  "nodeType": "ExpressionStatement",
                  "src": "3057:61:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8473,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8361,
                        "src": "3125:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8475,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 8474,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8443,
                        "src": "3134:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3125:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8480,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8445,
                          "src": "3163:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 8476,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8361,
                            "src": "3143:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 8478,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 8477,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8443,
                            "src": "3152:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3143:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9090,
                        "src": "3143:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3143:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3125:46:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8483,
                  "nodeType": "ExpressionStatement",
                  "src": "3125:46:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8485,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8443,
                        "src": "3190:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8486,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8445,
                        "src": "3197:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8484,
                      "name": "VaultAdd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8357,
                      "src": "3181:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3181:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8488,
                  "nodeType": "EmitStatement",
                  "src": "3176:29:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 8489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3219:4:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8449,
                  "id": 8490,
                  "nodeType": "Return",
                  "src": "3212:11:9"
                }
              ]
            },
            "documentation": "@dev Function to add tokens\n@param _from The address that will receive the tokens.\n@param _amount The amount of tokens to add.\n@return A boolean that indicates if the operation was successful.",
            "id": 8492,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8443,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 8492,
                  "src": "2924:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2924:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8445,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8492,
                  "src": "2939:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2939:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2923:32:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8448,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8492,
                  "src": "2973:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8447,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2973:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2972:6:9"
            },
            "scope": 8533,
            "src": "2911:317:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8519,
              "nodeType": "Block",
              "src": "3542:134:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$9436",
                          "typeString": "contract ERC20Basic"
                        },
                        "id": 8502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8500,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8494,
                          "src": "3556:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Basic_$9436",
                            "typeString": "contract ERC20Basic"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8501,
                          "name": "experimentalToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8363,
                          "src": "3566:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                            "typeString": "contract ExperimentalToken"
                          }
                        },
                        "src": "3556:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9762,
                        9763
                      ],
                      "referencedDeclaration": 9762,
                      "src": "3548:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3548:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8504,
                  "nodeType": "ExpressionStatement",
                  "src": "3548:36:9"
                },
                {
                  "assignments": [
                    8506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8506,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 8520,
                      "src": "3590:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8505,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3590:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8511,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8509,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9802,
                        "src": "3625:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserVault_$8533",
                          "typeString": "contract UserVault"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_UserVault_$8533",
                          "typeString": "contract UserVault"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8507,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8494,
                        "src": "3608:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$9436",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 8508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9418,
                      "src": "3608:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3608:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3590:40:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8515,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9226,
                        "src": "3656:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8516,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8506,
                        "src": "3663:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8512,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8494,
                        "src": "3636:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$9436",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 8514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9458,
                      "src": "3636:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Basic_$9436_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Basic_$9436_$",
                        "typeString": "function (contract ERC20Basic,address,uint256)"
                      }
                    },
                    "id": 8517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3636:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8518,
                  "nodeType": "ExpressionStatement",
                  "src": "3636:35:9"
                }
              ]
            },
            "documentation": "@dev Function to overwrite reclaimToken\nDo not allow owner to reclaim contract specific tokens.\n@param _token The token address that will be reclaimed.\n@return A boolean that indicates if the operation was successful.",
            "id": 8520,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 8497,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8496,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "3532:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3532:9:9"
              }
            ],
            "name": "reclaimToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8494,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 8520,
                  "src": "3504:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$9436",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8493,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9436,
                    "src": "3504:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$9436",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3503:19:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3542:0:9"
            },
            "scope": 8533,
            "src": "3482:194:9",
            "stateMutability": "nonpayable",
            "superFunction": 9123,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8531,
              "nodeType": "Block",
              "src": "3955:33:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 8527,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8361,
                      "src": "3968:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 8529,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 8528,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8522,
                      "src": "3977:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3968:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8526,
                  "id": 8530,
                  "nodeType": "Return",
                  "src": "3961:22:9"
                }
              ]
            },
            "documentation": "@dev Gets the balance of the specified address.\n@param _user The address to query the balance of.\n@return An uint256 representing the amount owned by the passed address.",
            "id": 8532,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8522,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 8532,
                  "src": "3896:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3896:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3895:15:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8525,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 8532,
                  "src": "3938:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3938:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3937:17:9"
            },
            "scope": 8533,
            "src": "3877:111:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 8534,
        "src": "571:3419:9"
      }
    ],
    "src": "0:3991:9"
  },
  "legacyAST": {
    "absolutePath": "/home/francisco/Truffle/crypto-wars-solidity/contracts/UserVault.sol",
    "exportedSymbols": {
      "UserVault": [
        8533
      ]
    },
    "id": 8534,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8339,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "e11-contracts/contracts/ExperimentalToken.sol",
        "file": "e11-contracts/contracts/ExperimentalToken.sol",
        "id": 8340,
        "nodeType": "ImportDirective",
        "scope": 8534,
        "sourceUnit": 8954,
        "src": "26:55:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "zeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 8341,
        "nodeType": "ImportDirective",
        "scope": 8534,
        "sourceUnit": 9092,
        "src": "82:55:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/NoOwner.sol",
        "file": "zeppelin-solidity/contracts/ownership/NoOwner.sol",
        "id": 8342,
        "nodeType": "ImportDirective",
        "scope": 8534,
        "sourceUnit": 9223,
        "src": "138:59:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/francisco/Truffle/crypto-wars-solidity/contracts/UserVillage.sol",
        "file": "./UserVillage.sol",
        "id": 8343,
        "nodeType": "ImportDirective",
        "scope": 8534,
        "sourceUnit": 8843,
        "src": "198:27:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/francisco/Truffle/crypto-wars-solidity/contracts/Versioned.sol",
        "file": "./Versioned.sol",
        "id": 8344,
        "nodeType": "ImportDirective",
        "scope": 8534,
        "sourceUnit": 8915,
        "src": "226:25:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8345,
              "name": "NoOwner",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9222,
              "src": "593:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NoOwner_$9222",
                "typeString": "contract NoOwner"
              }
            },
            "id": 8346,
            "nodeType": "InheritanceSpecifier",
            "src": "593:7:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8347,
              "name": "Versioned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8914,
              "src": "602:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Versioned_$8914",
                "typeString": "contract Versioned"
              }
            },
            "id": 8348,
            "nodeType": "InheritanceSpecifier",
            "src": "602:9:9"
          }
        ],
        "contractDependencies": [
          8914,
          9124,
          9150,
          9185,
          9210,
          9222,
          9278
        ],
        "contractKind": "contract",
        "documentation": "@title UserVault (WIP)\n@dev Keeps track of users e11 balance inside the game.\nAdditional functionality might be added to allow withdraws, implement time locks on withdraws,\nand enable internal transfers between users.\n@dev Issue: * https://github.com/e11-io/crypto-wars-solidity/issues/2",
        "fullyImplemented": true,
        "id": 8533,
        "linearizedBaseContracts": [
          8533,
          8914,
          9222,
          9150,
          9210,
          9124,
          9185,
          9278
        ],
        "name": "UserVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8351,
            "libraryName": {
              "contractScope": null,
              "id": 8349,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9091,
              "src": "622:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$9091",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "616:27:9",
            "typeName": {
              "id": 8350,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "635:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": "@dev event for adding tokens logging\n@param owner The address that will receive the tokens.\n@param amount The amount of tokens to add.",
            "id": 8357,
            "name": "VaultAdd",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8353,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 8357,
                  "src": "823:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8355,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8357,
                  "src": "846:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "822:39:9"
            },
            "src": "808:54:9"
          },
          {
            "constant": false,
            "id": 8361,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 8533,
            "src": "929:43:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 8360,
              "keyType": {
                "id": 8358,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "937:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "929:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8359,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "948:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8363,
            "name": "experimentalToken",
            "nodeType": "VariableDeclaration",
            "scope": 8533,
            "src": "976:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
              "typeString": "contract ExperimentalToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 8362,
              "name": "ExperimentalToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8953,
              "src": "976:17:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                "typeString": "contract ExperimentalToken"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8365,
            "name": "previousUserVault",
            "nodeType": "VariableDeclaration",
            "scope": 8533,
            "src": "1015:27:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UserVault_$8533",
              "typeString": "contract UserVault"
            },
            "typeName": {
              "contractScope": null,
              "id": 8364,
              "name": "UserVault",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8533,
              "src": "1015:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserVault_$8533",
                "typeString": "contract UserVault"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8367,
            "name": "userVillage",
            "nodeType": "VariableDeclaration",
            "scope": 8533,
            "src": "1046:23:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UserVillage_$8842",
              "typeString": "contract UserVillage"
            },
            "typeName": {
              "contractScope": null,
              "id": 8366,
              "name": "UserVillage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8842,
              "src": "1046:11:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserVillage_$8842",
                "typeString": "contract UserVillage"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8370,
              "nodeType": "Block",
              "src": "1163:4:9",
              "statements": []
            },
            "documentation": "@dev Constructor: Instantiate User Vault contract.",
            "id": 8371,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1153:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1163:0:9"
            },
            "scope": 8533,
            "src": "1142:25:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8378,
              "nodeType": "Block",
              "src": "1335:19:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 8376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1346:4:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8375,
                  "id": 8377,
                  "nodeType": "Return",
                  "src": "1339:11:9"
                }
              ]
            },
            "documentation": "@notice Makes the contract type verifiable.\n@dev Function to prove the contract is User Vault.",
            "id": 8379,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isUserVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8374,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8379,
                  "src": "1329:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8373,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1328:6:9"
            },
            "scope": 8533,
            "src": "1283:71:9",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8410,
              "nodeType": "Block",
              "src": "1788:169:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 8389,
                            "name": "_previousUserVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8381,
                            "src": "1800:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserVault_$8533",
                              "typeString": "contract UserVault"
                            }
                          },
                          "id": 8390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUserVault",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8379,
                          "src": "1800:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$__$returns$_t_bool_$",
                            "typeString": "function () pure external returns (bool)"
                          }
                        },
                        "id": 8391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1800:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8388,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9762,
                        9763
                      ],
                      "referencedDeclaration": 9762,
                      "src": "1792:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8393,
                  "nodeType": "ExpressionStatement",
                  "src": "1792:41:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8395,
                          "name": "_version",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8383,
                          "src": "1845:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 8396,
                              "name": "_previousUserVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8381,
                              "src": "1856:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UserVault_$8533",
                                "typeString": "contract UserVault"
                              }
                            },
                            "id": 8397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "version",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8849,
                            "src": "1856:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 8398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1856:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1845:39:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9762,
                        9763
                      ],
                      "referencedDeclaration": 9762,
                      "src": "1837:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1837:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8401,
                  "nodeType": "ExpressionStatement",
                  "src": "1837:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8402,
                      "name": "previousUserVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8365,
                      "src": "1889:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserVault_$8533",
                        "typeString": "contract UserVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8403,
                      "name": "_previousUserVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8381,
                      "src": "1909:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserVault_$8533",
                        "typeString": "contract UserVault"
                      }
                    },
                    "src": "1889:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserVault_$8533",
                      "typeString": "contract UserVault"
                    }
                  },
                  "id": 8405,
                  "nodeType": "ExpressionStatement",
                  "src": "1889:38:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8407,
                        "name": "_version",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8383,
                        "src": "1944:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8406,
                      "name": "setVersion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8884,
                      "src": "1933:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 8408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1933:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8409,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:20:9"
                }
              ]
            },
            "documentation": "@notice Sets the contract's version and instantiates the previous version contract.\n@dev Function to set the contract version and instantiate the previous User Buildings.\n@param _previousUserVault the address of previous User Vault contract. (address)\n@param _version the current contract version number. (uint)",
            "id": 8411,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 8386,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8385,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "1778:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1778:9:9"
              }
            ],
            "name": "setUserVaultVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8381,
                  "name": "_previousUserVault",
                  "nodeType": "VariableDeclaration",
                  "scope": 8411,
                  "src": "1724:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UserVault_$8533",
                    "typeString": "contract UserVault"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8380,
                    "name": "UserVault",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8533,
                    "src": "1724:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserVault_$8533",
                      "typeString": "contract UserVault"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8383,
                  "name": "_version",
                  "nodeType": "VariableDeclaration",
                  "scope": 8411,
                  "src": "1754:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8382,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1723:45:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1788:0:9"
            },
            "scope": 8533,
            "src": "1695:262:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8422,
              "nodeType": "Block",
              "src": "2276:49:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8418,
                      "name": "experimentalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8363,
                      "src": "2282:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                        "typeString": "contract ExperimentalToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8419,
                      "name": "_experimentalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8413,
                      "src": "2302:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                        "typeString": "contract ExperimentalToken"
                      }
                    },
                    "src": "2282:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                      "typeString": "contract ExperimentalToken"
                    }
                  },
                  "id": 8421,
                  "nodeType": "ExpressionStatement",
                  "src": "2282:38:9"
                }
              ]
            },
            "documentation": "@notice Instantiate Experimental Token contract.\n@dev Function to provide Experimental Token address and instantiate it.\n@param _experimentalToken the address of Experimental Token contract. (address)",
            "id": 8423,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 8416,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8415,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "2266:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2266:9:9"
              }
            ],
            "name": "setExperimentalToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8413,
                  "name": "_experimentalToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 8423,
                  "src": "2219:36:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                    "typeString": "contract ExperimentalToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8412,
                    "name": "ExperimentalToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8953,
                    "src": "2219:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                      "typeString": "contract ExperimentalToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2218:38:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2276:0:9"
            },
            "scope": 8533,
            "src": "2189:136:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8440,
              "nodeType": "Block",
              "src": "2602:80:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 8431,
                            "name": "_userVillage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8425,
                            "src": "2616:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserVillage_$8842",
                              "typeString": "contract UserVillage"
                            }
                          },
                          "id": 8432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUserVillage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8587,
                          "src": "2616:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$__$returns$_t_bool_$",
                            "typeString": "function () pure external returns (bool)"
                          }
                        },
                        "id": 8433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2616:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9762,
                        9763
                      ],
                      "referencedDeclaration": 9762,
                      "src": "2608:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2608:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8435,
                  "nodeType": "ExpressionStatement",
                  "src": "2608:37:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8436,
                      "name": "userVillage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8367,
                      "src": "2651:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserVillage_$8842",
                        "typeString": "contract UserVillage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8437,
                      "name": "_userVillage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8425,
                      "src": "2665:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserVillage_$8842",
                        "typeString": "contract UserVillage"
                      }
                    },
                    "src": "2651:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserVillage_$8842",
                      "typeString": "contract UserVillage"
                    }
                  },
                  "id": 8439,
                  "nodeType": "ExpressionStatement",
                  "src": "2651:26:9"
                }
              ]
            },
            "documentation": "@notice Instantiate User Village contract.\n@dev Function to provide User Village address and instantiate it.\n@param _userVillage the address of User Village contract. (address)",
            "id": 8441,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 8428,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8427,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "2592:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2592:9:9"
              }
            ],
            "name": "setUserVillage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8425,
                  "name": "_userVillage",
                  "nodeType": "VariableDeclaration",
                  "scope": 8441,
                  "src": "2557:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UserVillage_$8842",
                    "typeString": "contract UserVillage"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8424,
                    "name": "UserVillage",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8842,
                    "src": "2557:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserVillage_$8842",
                      "typeString": "contract UserVillage"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2556:26:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2602:0:9"
            },
            "scope": 8533,
            "src": "2533:149:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8491,
              "nodeType": "Block",
              "src": "2979:249:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8451,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9759,
                              "src": "2993:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2993:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8454,
                                "name": "userVillage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8367,
                                "src": "3015:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UserVillage_$8842",
                                  "typeString": "contract UserVillage"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UserVillage_$8842",
                                  "typeString": "contract UserVillage"
                                }
                              ],
                              "id": 8453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3007:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 8455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3007:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2993:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8457,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9759,
                              "src": "3031:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3031:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 8459,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9226,
                            "src": "3045:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3031:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2993:57:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9762,
                        9763
                      ],
                      "referencedDeclaration": 9762,
                      "src": "2985:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2985:66:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8463,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:66:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8467,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8443,
                            "src": "3096:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 8468,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9802,
                            "src": "3103:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserVault_$8533",
                              "typeString": "contract UserVault"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 8469,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8445,
                            "src": "3109:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_UserVault_$8533",
                              "typeString": "contract UserVault"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 8465,
                            "name": "experimentalToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8363,
                            "src": "3065:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                              "typeString": "contract ExperimentalToken"
                            }
                          },
                          "id": 8466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9598,
                          "src": "3065:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 8470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3065:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9762,
                        9763
                      ],
                      "referencedDeclaration": 9762,
                      "src": "3057:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3057:61:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8472,
                  "nodeType": "ExpressionStatement",
                  "src": "3057:61:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8473,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8361,
                        "src": "3125:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8475,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 8474,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8443,
                        "src": "3134:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3125:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8480,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8445,
                          "src": "3163:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 8476,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8361,
                            "src": "3143:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 8478,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 8477,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8443,
                            "src": "3152:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3143:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9090,
                        "src": "3143:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3143:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3125:46:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8483,
                  "nodeType": "ExpressionStatement",
                  "src": "3125:46:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8485,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8443,
                        "src": "3190:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8486,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8445,
                        "src": "3197:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8484,
                      "name": "VaultAdd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8357,
                      "src": "3181:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3181:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8488,
                  "nodeType": "EmitStatement",
                  "src": "3176:29:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 8489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3219:4:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8449,
                  "id": 8490,
                  "nodeType": "Return",
                  "src": "3212:11:9"
                }
              ]
            },
            "documentation": "@dev Function to add tokens\n@param _from The address that will receive the tokens.\n@param _amount The amount of tokens to add.\n@return A boolean that indicates if the operation was successful.",
            "id": 8492,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8443,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 8492,
                  "src": "2924:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2924:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8445,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8492,
                  "src": "2939:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2939:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2923:32:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8448,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8492,
                  "src": "2973:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8447,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2973:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2972:6:9"
            },
            "scope": 8533,
            "src": "2911:317:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8519,
              "nodeType": "Block",
              "src": "3542:134:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$9436",
                          "typeString": "contract ERC20Basic"
                        },
                        "id": 8502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8500,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8494,
                          "src": "3556:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Basic_$9436",
                            "typeString": "contract ERC20Basic"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8501,
                          "name": "experimentalToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8363,
                          "src": "3566:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExperimentalToken_$8953",
                            "typeString": "contract ExperimentalToken"
                          }
                        },
                        "src": "3556:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9762,
                        9763
                      ],
                      "referencedDeclaration": 9762,
                      "src": "3548:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3548:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8504,
                  "nodeType": "ExpressionStatement",
                  "src": "3548:36:9"
                },
                {
                  "assignments": [
                    8506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8506,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 8520,
                      "src": "3590:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8505,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3590:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8511,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8509,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9802,
                        "src": "3625:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserVault_$8533",
                          "typeString": "contract UserVault"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_UserVault_$8533",
                          "typeString": "contract UserVault"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8507,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8494,
                        "src": "3608:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$9436",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 8508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9418,
                      "src": "3608:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3608:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3590:40:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8515,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9226,
                        "src": "3656:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8516,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8506,
                        "src": "3663:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8512,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8494,
                        "src": "3636:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$9436",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 8514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9458,
                      "src": "3636:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Basic_$9436_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Basic_$9436_$",
                        "typeString": "function (contract ERC20Basic,address,uint256)"
                      }
                    },
                    "id": 8517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3636:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8518,
                  "nodeType": "ExpressionStatement",
                  "src": "3636:35:9"
                }
              ]
            },
            "documentation": "@dev Function to overwrite reclaimToken\nDo not allow owner to reclaim contract specific tokens.\n@param _token The token address that will be reclaimed.\n@return A boolean that indicates if the operation was successful.",
            "id": 8520,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 8497,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8496,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "3532:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3532:9:9"
              }
            ],
            "name": "reclaimToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8494,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 8520,
                  "src": "3504:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$9436",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8493,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9436,
                    "src": "3504:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$9436",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3503:19:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3542:0:9"
            },
            "scope": 8533,
            "src": "3482:194:9",
            "stateMutability": "nonpayable",
            "superFunction": 9123,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8531,
              "nodeType": "Block",
              "src": "3955:33:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 8527,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8361,
                      "src": "3968:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 8529,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 8528,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8522,
                      "src": "3977:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3968:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8526,
                  "id": 8530,
                  "nodeType": "Return",
                  "src": "3961:22:9"
                }
              ]
            },
            "documentation": "@dev Gets the balance of the specified address.\n@param _user The address to query the balance of.\n@return An uint256 representing the amount owned by the passed address.",
            "id": 8532,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8522,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 8532,
                  "src": "3896:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3896:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3895:15:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 8526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8525,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 8532,
                  "src": "3938:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3938:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3937:17:9"
            },
            "scope": 8533,
            "src": "3877:111:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 8534,
        "src": "571:3419:9"
      }
    ],
    "src": "0:3991:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {
    "311": {
      "events": {},
      "links": {},
      "address": "0x27792e92050487c8c4002c17d4dfbff9feca57f7",
      "transactionHash": "0x5de8ab6c8f77f0d1574f4ec0e3fd4d9616724d8e8a96c98c8b25e836062c76dc"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-26T19:14:33.839Z"
}